# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Run Lint

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main, develop]

    workflow_dispatch:

jobs:
    test:
        runs-on: ubuntu-latest

        env:
            NODE_ENV: test
            DATABASE_HOST: 127.0.0.1
            DATABASE_PORT: 3306
            DATABASE_NAME: zenithatesting
            DATABASE_USER: root
            DATABASE_PASS: testPassword
            JWT_EXPIRY: 1y
            JWT_SECRET: someverylongpassword

        services:
            mysql:
                image: mysql:latest
                env:
                    MYSQL_ROOT_PASSWORD: testPassword
                ports:
                    - 3306:3306
                options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

        steps:
            - uses: actions/checkout@v2
            - name: Set up MySQL
              run: |
                  mysql -u root -p${{ env.DATABASE_PASS }} -h ${{ env.DATABASE_HOST }} -P 3306 -e "CREATE DATABASE IF NOT EXISTS zenithatesting;"
                  mysql -u root -p${{ env.DATABASE_PASS }} -h ${{ env.DATABASE_HOST }} -P 3306 -e "ALTER USER 'root' IDENTIFIED WITH mysql_native_password BY '${{ env.DATABASE_PASS }}';"
                  mysql -u root -p${{ env.DATABASE_PASS }} -h ${{ env.DATABASE_HOST }} -P 3306 -e "FLUSH PRIVILEGES;"

            - name: Setup Node 18
              uses: actions/setup-node@v2
              with:
                  node-version: 18.16.0

            - name: Cache node_modules
              uses: actions/cache@v1
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - run: npm install
              id: install-dependencies

            - name: Run Migrations
              run: npx knex migrate:latest --env=test

            - run: npm run ci:check
              id: run-ci-checks
